openapi: 3.0.0
info:
  title: 66-Jobs-Api
  version: '1.0'
  contact: {}
servers:
  - url: https://nodejs-temp-jobs-api.onrender.com
    variables: {}
paths:
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateJobRequest'
                - example:
                    company: Huawei
                    position: video-editor
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Single Job
      operationId: SingleJob
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateJobRequest'
                - example:
                    position: FullStack-Developer
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: Login
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginRequest'
                - example:
                    email: ayeaye@gmail.com
                    password: secret
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: Register
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterRequest'
                - example:
                    name: ayeaye
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

components:
  schemas:
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Huawei
        position: video-editor
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ayeaye@gmail.com
        password: secret
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: ayeaye
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - position
      type: object
      properties:
        position:
          type: string
      example:
        position: FullStack-Developer

securitySchemes:
  bearer:
    type: http
    scheme: bearer

security: []

tags:
  - name: Jobs
    description: ''
  - name: Auth
    description: ''
